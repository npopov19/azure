{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1_copy1",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "split1"
				},
				{
					"name": "sort1"
				},
				{
					"name": "surrogateKey1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Flag as string,",
				"          Folder as string,",
				"          Time_added as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 split(Time_added=='Yes',",
				"     disjoint: false) ~> split1@(yes, no)",
				"split1@yes sort(asc(Flag, true)) ~> sort1",
				"sort1 keyGenerate(output(Folder1 as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          flag as string,",
				"          folder as string,",
				"          cv as string",
				"     ),",
				"     stagingSchemaName: 'dbo',",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          flag = Flag,",
				"          folder = Folder1,",
				"          cv = Time_added",
				"     )) ~> sink1",
				"split1@no sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          flag as string,",
				"          folder as string,",
				"          cv as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          flag = Flag,",
				"          folder = Folder",
				"     )) ~> sink2"
			]
		}
	}
}