{
	"name": "dataflow1",
	"properties": {
		"folder": {
			"name": "wip"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "containerpayhist",
						"type": "DatasetReference"
					},
					"name": "payhist"
				},
				{
					"dataset": {
						"referenceName": "containeremployees",
						"type": "DatasetReference"
					},
					"name": "Employees"
				},
				{
					"dataset": {
						"referenceName": "containershifts",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "lookup1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          BusinessEntityID as short,",
				"          RateChangeDate as timestamp,",
				"          Rate as double,",
				"          PayFrequency as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> payhist",
				"source(output(",
				"          BusinessEntityID as short,",
				"          NationalIDNumber as integer,",
				"          LoginID as string,",
				"          OrganizationLevel as short,",
				"          JobTitle as string,",
				"          MaritalStatus as string,",
				"          Shift as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Employees",
				"source(output(",
				"          ShiftID as integer,",
				"          Name as string,",
				"          StartTime as string,",
				"          EndTime as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"Employees, source1 lookup(Shift == ShiftID,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(ERROR_FUNCTION(''), true),",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 sink(validateSchema: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1) ~> sink1"
			]
		}
	}
}